#-------------------------------------------------------------------------------
#
# Project: EOxServer <http://eoxserver.org>
# Authors: Stephan Krause <stephan.krause@eox.at>
#          Stephan Meissl <stephan.meissl@eox.at>
#          Martin Paces <martin.paces@eox.at>
#
#-------------------------------------------------------------------------------
# Copyright (C) 2011 EOX IT Services GmbH
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
# copies of the Software, and to permit persons to whom the Software is 
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies of this Software or works derived from this Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#-------------------------------------------------------------------------------

#-----------------------------------------------------------------------
# New style configuration
#-----------------------------------------------------------------------

[core.system]

# The instance ID. Shall be a valid NCName.
# Mandatory.
instance_id={{ project_name }}

[services.owscommon]
#http_service_url    (mandatory) the URL where GET KVP and POST XML
#                                OWS requests are expected
http_service_url=http://localhost:8000/ows

[services.ows.wms]

# CRSes supported by WMS (EPSG code; uncomment to set non-default values)
supported_crs=4326,3857 # WGS84, WGS84 Pseudo-Mercator

# file formats supported by WMS 
supported_formats=image/png,image/jpeg,image/gif,image/tiff

[services.ows.wcs]

# CRSes supported by WCS (EPSG code; uncomment to set non-default values)
supported_crs=4326,3857 # WGS84, WGS84 Pseudo-Mercator

# file formats supported by WCS (uncomment to set non-default values) 
supported_formats=image/tiff,image/jp2,application/x-netcdf,application/x-hdf

# the maximum size of output coverages
# maxsize = 2048

[services.ows.wcs20]
#paging_count_default (optional) Number of maximum coverageDescriptions
#                                returned at once.
#                                Reported as ows:Constraint in
#                                GetCapabilities responses.
paging_count_default=10

# fallback native format (used in case of read-only source format and no explicit fomat mapping;
# uncomment to use the non-default values)
#default_native_format=image/tiff

# explicit source to native format mapping (no restricted to read only source formats; 
# the values should always come in pairs)  
source_to_native_format_map=application/x-esa-envisat,image/tiff

[services.auth.base]
# Determine the Policy Decision Point type; defaults to 'none' which deactives
# authorization
pdp_type=none
# URL of the Authorization Service
authz_service=http://localhost:8080/axis2_service/services/PolicyManagementAndAuthorisationService
# Path to an attribute dictionary for user attributes
attribute_mapping=default
# Sets a custom service identifier
serviceID=default
# Allows full local access to the EOxServer. Use with care!
allowLocal=False


[backends.cache]
# cache_dir=/tmp
# max_size
# retention_time

[services.ows.wcst11]

#this flag enables/disable mutiple actions per WCSt request 
# NOTE: it's much safer to keep this feature disabled 
allow_multiple_actions=False 

# list enabled actions {Add,Delete,UpdateAll,UpdateMetadata,UpdateDataPart}
# set Add,Delete for the autotest configuration 
allowed_actions=

# temporary storage 
path_wcst_temp={{ project_directory }}/{{ project_name }}/wcst_temp

# permanent data storage 
path_wcst_perm={{ project_directory }}/{{ project_name }}/wcst_perm

[processing.gdal.reftools]
#vrt_tmp_dir=<fill your path here>

[webclient]
# either wms or wmts
#preview_service=wms
#outline_service=wms
# URL to WMS/WMTS service, defaults to services.owscommon.http_service_url
#preview_url=http://localhost:8000/ows?
#outline_url=http://localhost:8000/ows?

[testing]
# defaults to true
#binary_raster_comparison_enabled=false

# defaults to false
#rasdaman_enabled=true
