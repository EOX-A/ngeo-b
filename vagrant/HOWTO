########################################################################
# How to use vagrant in Linux environment                              #
########################################################################

# Clone ngEO Browse Server
git clone git@github.com:EOX-A/ngeo-b.git
cd ngeo-b/
git submodule init
git submodule update

# Prepare local environment
cd vagrant/shares/
git clone git@github.com:EOxServer/eoxserver.git
cd eoxserver/
git checkout 0.3
cd ../
git clone git@github.com:mapserver/mapcache.git
cd mapcache/
git checkout branch-1-2
cd ../../

# Install VirtualBox & Vagrant
# Tested with 
# * Vagrant v1.3.5      http://downloads.vagrantup.com/tags/v1.3.5
# * VirtualBox 4.3.0    https://www.virtualbox.org/wiki/Downloads

# Install Vagrant add-ons
vagrant plugin install sahara           # Sandboxing https://github.com/jedi4ever/sahara
vagrant plugin install vagrant-vbguest  # Check for Virtualbox Guest Additions https://github.com/dotless-de/vagrant-vbguest
vagrant plugin install vagrant-cachier  # Cache yum/apt/etc. packages https://github.com/fgrehm/vagrant-cachier

# Run vagrant
vagrant up
vagrant ssh

# Access server
http://localhost:3080/

########################################################################
# How to use vagrant in Windows environment                            #
########################################################################

Use the following steps:
1) Install git from http://git-scm.com/download/win
2) Install VirtualBox from
http://download.virtualbox.org/virtualbox/4.3.2/VirtualBox-4.3.2-90405-Win.exe
3) Install vagrant from http://downloads.vagrantup.com/tags/v1.3.5 (use the .msi file)
4) Start a git bash and execute the following commands:
git clone git@github.com:EOX-A/ngeo-b.git
cd ngeo-b/
git submodule init
git submodule update

# Prepare local environment
cd vagrant/shares/
git clone git@github.com:EOxServer/eoxserver.git
cd eoxserver/
git checkout 0.3
cd ../
git clone git@github.com:mapserver/mapcache.git
cd mapcache/
git checkout branch-1-2
cd ../../

5) Open the Vagrantfile (located in ngeo-b/vagrant ) with an editor.
6) Add v.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/vagrant", "1"] before the line # Use GUI for debugging purposes
7) Save and close Vagrantfile
8) Open an Administrator Console (right click on the command prompt icon and select "Run as administrator")
9) Enter secpol.msc (and hit enter). Navigate to Local Policies, User Rights Assignment and check "Create symbolic links". Make sure that the Administrator account is added. Close it.
10) Still in the admin console enter: fsutil behavior set SymlinkEvaluation L2L:1 R2R:1 L2R:1 R2L:1 (and hit enter. This step isn't necessary on all systems. Only if you use net shares. But it does not hurt 
11) Open the Administrative Tools Panel from the Control Panel. Open Component Services.
12) Select Computers, My Computer, Select DCOM Config.
13) Right click on "Virtual Box Application". Select Security. At "Launch and Activation Permissions" select Customize. Hit Edit.
14) Add your user account and Administrator. Select Permissions: Local Launch, Remote Launch, Local Activation and Remote Activation. Hit Ok. And again ok. Close the Component Services.
15) Log off and log on again.
16) Open an Administrator console and enter:
vagrant plugin install sahara
vagrant plugin install vagrant-vbguest
vagrant up
17) You are done.



# Troubleshoot vagrant
vagrant provision       # If the provisioning didn't finish during vagrant up or after changes.
vagrant vbguest -f      # (Re-)Install virtualbox guest additions in case it complains about not matching versions.

#Slow performance: Check "Enable IO APIC", uncheck "Extended Features: Enable PAE/NX", and uncheck "Enable Nested Paging" in VirtualBox Manager.
#Symlinks with VirtualBox 4.1 not working: vi /opt/vagrant/embedded/gems/gems/vagrant-1.3.5/plugins/providers/virtualbox/driver/version_4_1.rb and add those changes: https://github.com/mitchellh/vagrant/commit/387692f9c8fa4031050646e2773b3d2d9b2c994e


########################################################################
# Build preparations                                                   #
########################################################################

# Prepare vagrant environment as described at: https://gitlab.eox.at/vagrant/builder_rpm/tree/master


########################################################################
# How to build ngEO Browse Server                                      #
########################################################################

cd git/ngeo-b/
git pull

vi ngeo_browse_server/__init__.py
# Adjust version
vi setup.py
# Adjust Development Status
git commit setup.py ngeo_browse_server/__init__.py -m "Adjusting version."
git push
# Info:
#Development Status :: 1 - Planning
#Development Status :: 2 - Pre-Alpha
#Development Status :: 3 - Alpha
#Development Status :: 4 - Beta
#Development Status :: 5 - Production/Stable
#Development Status :: 6 - Mature
#Development Status :: 7 - Inactive

git tag -a release-1.0.1 -m "Tagging 1.0.1 release."
git push --tags
git archive --format=tar --prefix=ngeob-1.0.1/ release-1.0.1 | gzip > ngeob-1.0.1.tar.gz
mv ngeob-1.0.1.tar.gz ....
cd ....
vagrant ssh
tar xzf ngeob-1.0.1.tar.gz
rm ngeob-1.0.1.tar.gz
cd ngeob-1.0.1/
python setup.py bdist_rpm --release <NO>
cd dist
tar czf ../../ngeob-1.0.1.tar.gz ngEO_Browse_Server-1.0.1*rpm
# scp ../../ngeob-1.0.1.tar.gz -> packages
cd ../..
rm -r ngeob-1.0.1/

########################################################################
# How to build EOxServer                                               #
########################################################################

svn export .... # https://eoxserver.org/svn/branches/0.3 or https://eoxserver.org/svn/tags/release-0.3beta2
cd ....
vagrant ssh
python setup.py bdist_rpm --release <NO>
tar czf ../EOxServer-0.3dev.tar.gz dist/EOxServer-0.3dev*rpm
# scp ../EOxServer-0.3dev.tar.gz -> packages.eox.at

########################################################################
# How to build MapCache                                                #
########################################################################

cd mapcache_git
git pull
git archive --format=tar --prefix=mapcache-1.1dev/ master | gzip > ..../mapcache-1.1dev.tar.gz
cd  ....
vagrant ssh
cd rpmbuild/SPECS/
vi mapcache.spec
# Adjust Release
rpmbuild -ba mapcache.spec
cd ..
mv RPMS/x86_64/ .
tar czf t x86_64/ SRPMS/
rm -r x86_64/ SRPMS/
# Install at packages@yum.packages.eox.at


########################################################################
# How to build MapServer                                               #
########################################################################

cd mapserver_git
git pull
vi mapserver.h
# Adjust MS_VERSION: #define MS_VERSION "6.3dev"
git archive --format=tar --prefix=mapserver-6.3dev/ master | gzip > mapserver-6.3dev.tar.gz
cd ....
vagrant ssh
cd rpmbuild/SPECS/
vi mapserver.spec
# Adjust Release
rpmbuild -ba mapserver.spec
cd ..
mv RPMS/x86_64/ .
tar czf t x86_64/ SRPMS/
rm -r x86_64/ SRPMS/
# Install at packages@yum.packages.eox.at



########################################################################
# How to clean an ngEO Browse Server instance                          #
########################################################################

# Delete DB
sudo su postgres -
dropdb ngeo_browse_server_db
exit

sudo rm -r /var/www/cache/
sudo rm -r /var/www/ngeo/ngeo_browse_server_instance/
